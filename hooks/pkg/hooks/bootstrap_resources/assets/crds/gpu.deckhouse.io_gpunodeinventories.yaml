---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    heritage: deckhouse
    module: gpu-control-plane
  name: gpunodeinventories.gpu.deckhouse.io
spec:
  group: gpu.deckhouse.io
  names:
    categories:
    - deckhouse
    - gpu
    kind: GPUNodeInventory
    listKind: GPUNodeInventoryList
    plural: gpunodeinventories
    shortNames:
    - gpunode
    - gpnode
    singular: gpunodeinventory
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.nodeName
      name: Node
      type: string
    - jsonPath: .status.hw.present
      name: Present
      type: boolean
    - jsonPath: .status.conditions[?(@.type=="ReadyForPooling")].status
      name: ReadyForPooling
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GPUNodeInventory aggregates GPU-related state for a Kubernetes
          node.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines which node the inventory belongs to.
            properties:
              nodeName:
                description: NodeName is the Kubernetes node name the inventory describes.
                type: string
            type: object
          status:
            description: Status reflects hardware, driver and pooling state detected
              on the node.
            properties:
              bootstrap:
                description: Bootstrap describes results of bootstrap-controller checks
                  for the node.
                properties:
                  gfdReady:
                    description: GFDReady indicates that GPU Feature Discovery DaemonSet
                      is successfully running.
                    type: boolean
                  lastRun:
                    description: LastRun stores time of the last bootstrap reconciliation.
                    format: date-time
                    type: string
                  toolkitReady:
                    description: ToolkitReady signals that toolkit preparation on
                      the node completed.
                    type: boolean
                type: object
              conditions:
                description: Conditions surfaces aggregated readiness/alerting conditions
                  for the node.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              driver:
                description: Driver captures driver/toolkit versions and readiness.
                properties:
                  cudaVersion:
                    description: CUDAVersion is the CUDA runtime version available
                      on the node.
                    type: string
                  toolkitInstalled:
                    description: ToolkitReady indicates that required CUDA toolkit
                      components are installed.
                    type: boolean
                  version:
                    description: Version is the NVIDIA driver version detected on
                      the node.
                    type: string
                type: object
              hw:
                description: Hardware contains the list of GPUs discovered on the
                  node.
                properties:
                  devices:
                    description: Devices lists all detected GPUs with mirrored device
                      metadata.
                    items:
                      properties:
                        autoAttach:
                          description: AutoAttach flags whether automatic assignment
                            is enabled for the device.
                          type: boolean
                        computeCapability:
                          description: ComputeCap is the reported CUDA compute capability.
                          properties:
                            major:
                              description: Major is the major version of CUDA compute
                                capability.
                              format: int32
                              type: integer
                            minor:
                              description: Minor is the minor version of CUDA compute
                                capability.
                              format: int32
                              type: integer
                          type: object
                        health:
                          description: Health provides per-device telemetry snapshot.
                          properties:
                            eccErrorsTotal:
                              description: ECCErrorsTotal is the cumulative count
                                of ECC errors reported by DCGM.
                              format: int64
                              type: integer
                            lastUpdated:
                              description: LastUpdatedTime is when telemetry was last
                                refreshed.
                              format: date-time
                              type: string
                            metrics:
                              additionalProperties:
                                type: string
                              description: Metrics contains vendor specific telemetry
                                key/value pairs exported by controllers.
                              type: object
                            temperatureC:
                              description: TemperatureC is the latest reported temperature
                                in Celsius.
                              format: int32
                              type: integer
                          type: object
                        inventoryID:
                          description: InventoryID mirrors GPUDevice.status.inventoryID
                            for quick lookup.
                          type: string
                        memoryMiB:
                          description: MemoryMiB is device memory capacity in MiB.
                          format: int32
                          type: integer
                        mig:
                          description: MIG summarises MIG capabilities for this device.
                          properties:
                            capable:
                              description: Capable indicates whether MIG (Multi-Instance
                                GPU) is supported by the device.
                              type: boolean
                            profilesSupported:
                              description: ProfilesSupported enumerates MIG profiles
                                that can be provisioned on this device.
                              items:
                                type: string
                              type: array
                            strategy:
                              description: Strategy reflects current MIG strategy
                                detected on the node (None, Single, Mixed).
                              enum:
                              - None
                              - Single
                              - Mixed
                              type: string
                            types:
                              description: Types lists capacity counters for each
                                MIG profile provisioned on the device.
                              items:
                                properties:
                                  count:
                                    description: Count represents the number of profiles
                                      of this type currently configured.
                                    format: int32
                                    type: integer
                                  engines:
                                    description: Engines lists the number of acceleration
                                      engines exposed to the partition (copy/encoder/decoder/ofa).
                                    properties:
                                      copy:
                                        description: Copy is the number of copy engines
                                          assigned to the partition.
                                        format: int32
                                        type: integer
                                      decoder:
                                        description: Decoder is the number of NVDEC
                                          engines assigned to the partition.
                                        format: int32
                                        type: integer
                                      encoder:
                                        description: Encoder is the number of NVENC
                                          engines assigned to the partition.
                                        format: int32
                                        type: integer
                                      ofa:
                                        description: OFAs is the number of Optical
                                          Flow Accelerators available in the partition.
                                        format: int32
                                        type: integer
                                    type: object
                                  memoryMiB:
                                    description: MemoryMiB is the per-partition memory
                                      size in MiB.
                                    format: int32
                                    type: integer
                                  multiprocessors:
                                    description: Multiprocessors indicates the number
                                      of SMs allocated to this partition.
                                    format: int32
                                    type: integer
                                  name:
                                    description: Name is the MIG profile name (for
                                      example, 1g.10gb).
                                    type: string
                                  partition:
                                    description: Partition details the GPU and Compute
                                      instance identifiers associated with the profile.
                                    properties:
                                      computeInstance:
                                        description: ComputeInstance is the identifier
                                          of the compute instance allocated for the
                                          partition.
                                        format: int32
                                        type: integer
                                      gpuInstance:
                                        description: GPUInstance is the identifier
                                          of the GPU instance allocated for the partition.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              type: array
                          type: object
                        pci:
                          description: PCI describes vendor/device/class identifiers
                            for the PCI function.
                          properties:
                            class:
                              description: Class is the PCI class code in hexadecimal.
                              type: string
                            device:
                              description: Device is the PCI device id in hexadecimal.
                              type: string
                            vendor:
                              description: Vendor is the PCI vendor id in hexadecimal
                                (e.g. 10de).
                              type: string
                          type: object
                        precision:
                          description: Precision lists math precisions supported by
                            the device.
                          properties:
                            supported:
                              description: Supported lists all math precisions supported
                                by the device (e.g. fp32, fp16, bf16).
                              items:
                                type: string
                              type: array
                          type: object
                        product:
                          description: Product is the GPU model available on this
                            node.
                          type: string
                        reason:
                          description: Reason stores human readable reason why the
                            device is pending/unassigned.
                          type: string
                        state:
                          description: State mirrors GPUDevice.state for convenience.
                          enum:
                          - Unassigned
                          - Reserved
                          - Assigned
                          - Faulted
                          type: string
                        uuid:
                          description: UUID is the GPU UUID obtained from NVML/DCGM.
                          type: string
                      type: object
                    type: array
                  present:
                    description: Present indicates whether any supported GPU devices
                      are present on the node.
                    type: boolean
                type: object
              monitoring:
                description: Monitoring indicates health of GFD/DCGM exporters.
                properties:
                  dcgmReady:
                    description: DCGMReady shows whether DCGM exporter is running
                      and responsive.
                    type: boolean
                  lastHeartbeat:
                    description: LastHeartbeat records the timestamp of the last successful
                      monitoring heartbeat.
                    format: date-time
                    type: string
                type: object
              pools:
                description: Pools summarises assignments and pending requests for
                  pools on this node.
                properties:
                  assigned:
                    description: Assigned lists pools currently consuming device capacity
                      on the node.
                    items:
                      properties:
                        name:
                          description: Name is the GPUPool name serving workloads
                            on the node.
                          type: string
                        resource:
                          description: Resource is the device-plugin resource name
                            exposed for the assignment.
                          type: string
                        since:
                          description: Since records when the pool assignment became
                            active.
                          format: date-time
                          type: string
                        slotsReserved:
                          description: SlotsReserved counts allocated devices or partitions
                            for the pool on this node.
                          format: int32
                          type: integer
                      type: object
                    type: array
                  pending:
                    description: Pending describes pools awaiting operator approval
                      or automatic assignment.
                    items:
                      properties:
                        annotationHint:
                          description: AnnotationHint contains suggested annotation
                            key/value for manual assignment.
                          type: string
                        autoApproved:
                          description: AutoApproved shows whether the assignment will
                            happen automatically once requirements are satisfied.
                          type: boolean
                        pool:
                          description: Pool is the GPUPool awaiting approval or matching
                            devices.
                          type: string
                        reason:
                          description: Reason explains why the pool remains pending.
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
